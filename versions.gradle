//  Name
ext.version_name = "1.0.0"

def versions = [:]

// Androidx
versions.appcompat = '1.1.0'
versions.core = '1.1.0'
versions.legacy = '1.0.0'
versions.recyclerview = '1.1.0'
versions.constraint = '1.1.3'
versions.lifecycle = '2.1.0'
versions.preference = '1.1.0'
versions.navigation = '2.1.0'
versions.material = '1.0.0'
versions.biometric = '1.0.0'
versions.room = '2.2.2'
versions.paging = '2.1.0'
versions.sqlite = '2.0.1'

// Firebase
versions.messaging = '19.0.0'

// Google Services
versions.vision = '18.0.0'
versions.maps = '17.0.0'
versions.location = '17.0.0'
versions.auth = '17.0.0'

// Di
versions.koin = '2.0.1'

// DB

// Network
versions.retrofit = '2.6.0'
versions.logging = '3.11.0'

// Image
versions.glide = '4.9.0'

// Other
versions.facebook = '[5,6)'
versions.conceal = '2.0.1@aar'
versions.timber = '4.7.1'
versions.badger = '1.1.21@aar'
versions.avi = '2.1.3'
versions.ucrop = '2.2.2'
versions.dexter = '5.0.0'

// Test
versions.junit = '4.12'
versions.runner = '1.2.0'
versions.espresso = '3.2.0'

ext.versions = versions

def build_versions = [:]
build_versions.min_sdk = 21
build_versions.target_sdk = 29
build_versions.build_tools = "29.0.2"
ext.build_versions = build_versions

ext.buildVersionCode = {
    def candidate = "99"
    def (major, minor, patch) = version_name.toLowerCase().replaceAll('-', '').tokenize('.')
    if (patch.endsWith("snapshot")) {
        candidate = "0"
        patch = patch.replaceAll("[^0-9]","")
    } else {
        def rc
        (patch, rc) = patch.tokenize("rc")
        if (rc) {
            candidate = rc
        }
    }
    (major, minor, patch, candidate) = [major, minor, patch, candidate].collect{it.toInteger()}
    (major * 1000000) + (minor * 10000) + (patch * 100) + candidate
}

